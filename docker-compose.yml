version: '3.8'

services:
  postgres:
    container_name: postgres-ajay
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: new_employee_db
    ports:
      - "5068:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend-ajay
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - ./Backend/server.env
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  login:
    container_name: login-ajay
    build:
      context: ./Frontend/login
      dockerfile: Dockerfile
    ports:
      - "9076:80"
    restart: unless-stopped
    networks:
      - app_network

  signup:
    container_name: signup-ajay
    build:
      context: ./Frontend/signup
      dockerfile: Dockerfile
    ports:
      - "9077:80"
    restart: unless-stopped
    networks:
      - app_network

  forgot:
    container_name: forgot-ajay
    build:
      context: ./Frontend/forgot
      dockerfile: Dockerfile
    ports:
      - "9075:80"
    restart: unless-stopped
    networks:
      - app_network

  static-dashboard:
    container_name: static-ajay
    build:
      context: ./static-dashboard
      dockerfile: Dockerfile
    ports:
      - "9074:80"
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge

